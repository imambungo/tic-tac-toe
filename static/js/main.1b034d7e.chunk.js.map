{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","handleClick","history","state","slice","stepNumber","length","calculateWinner","xIsNext","setState","concat","tile","Array","fill","step","status","current","winner","moves","map","move","col","row","Math","floor","desc","key","jumpTo","winPattern","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAMA,SAASA,EAAOC,GACf,OACC,4BAAQC,UAAU,SACVC,QAASF,EAAME,SAErBF,EAAMG,O,IAKJC,E,2KACQC,GAAI,IAAD,OACf,OACC,kBAACN,EAAD,CACCI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMpC,OACC,oCACC,yBAAKJ,UAAU,aACbK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAEpB,yBAAKP,UAAU,aACbK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAEpB,yBAAKP,UAAU,aACbK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BJC,IAAMC,WAiCpBC,E,kDACL,WAAYX,GAAQ,IAAD,8BAClB,cAAMA,IAYPY,YAAc,SAACP,GACd,IAAMQ,EAAU,EAAKC,MAAMD,QAAQE,MAAM,EAAG,EAAKD,MAAME,WAAa,GAI9DT,EAHUM,EAAQA,EAAQI,OAAS,GAGjBV,QAAQQ,QAG5BG,EAAgBX,IAAYA,EAAQF,KAGxCE,EAAQF,GAAK,EAAKS,MAAMK,QAAU,IAAM,IACxC,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACvBD,QAASA,EAAQQ,OAAO,CACvB,CAECd,QAASA,EACTe,KAAMjB,KAKRW,WAAYF,EAAME,WAAa,EAC/BG,SAAUL,EAAMK,cAlCjB,EAAKL,MAAQ,CACZD,QAAS,CAAC,CACTN,QAASgB,MAAM,GAAGC,KAAK,QAExBR,WAAY,EACZG,SAAS,GAPQ,E,mDAyCZM,GACNnB,KAAKc,SAAS,CAEbJ,WAAYS,EACZN,QAAUM,EAAO,IAAO,M,+BAIhB,IAuBLC,EAvBI,OAGFb,EAAUP,KAAKQ,MAAMD,QACrBc,EAAUd,EAAQP,KAAKQ,MAAME,YAC7BY,EAASV,EAAgBS,EAAQpB,SAGjCsB,EAAQhB,EAAQiB,KAAI,WAASC,GAAU,IAAjBT,EAAgB,EAAhBA,KACrBU,EAAOV,EAAO,EAAK,EACnBW,EAAMC,KAAKC,MAAMb,EAAO,GAAK,EAC7Bc,EAAOL,EAAI,sBAAkBA,EAAlB,aAA2BC,EAA3B,YAAkCC,EAAlC,KACG,mBAEpB,OACC,wBAAII,IAAKN,GACR,4BAAQ7B,QAAS,kBAAM,EAAKoC,OAAOP,KACjCK,OAaL,OALCV,EADGE,EACM,WAAaA,EAEb,iBAAmBtB,KAAKQ,MAAMK,QAAU,IAAM,KAIvD,yBAAKlB,UAAU,QAGd,yBAAKA,UAAU,cACd,kBAACG,EAAD,CACCG,QAASoB,EAAQpB,QACjBL,QAASI,KAAKM,eAGhB,yBAAKX,UAAU,aACd,6BAAMyB,GACN,4BAAKG,S,GA5FSpB,IAAMC,WAuGnBQ,EAAkB,SAACX,GAWxB,IAVA,IAUA,MAVc,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAER,eAA8B,CAAzB,IAAIgC,EAAU,KAAW,cACXA,EADW,GACtBC,EADsB,KACnBC,EADmB,KAChBC,EADgB,KAI7B,GAAInC,EAAQiC,IAAMjC,EAAQiC,KAAOjC,EAAQkC,IACvBlC,EAAQiC,KAAOjC,EAAQmC,GAExC,OAAOnC,EAAQiC,GAGjB,OAAO,MAMRG,IAASC,OACR,kBAACjC,EAAD,MACAkC,SAASC,eAAe,W","file":"static/js/main.1b034d7e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// it's called function component\n// Flutter stateless widget equivalent (kinda)\nfunction Square(props) {\n\treturn (\n\t\t<button className=\"square\"\n\t\t        onClick={props.onClick}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component {\n\trenderSquare(i) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t}],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t};\n\t}\n\n\t// i = number (0-8)\n\t// klik kotak, bukan jump to step\n\thandleClick = (i) => {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\n\t\t                                // supaya tdk nge-mutate current.squares\n\t\tconst squares = current.squares.slice();\n\n\t\t// jika sudah ada pemenangnya atau square-nya sudah di-klik\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState(state => ({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\t         // squares current, dimana index ke-i sudah berisi\n\t\t\t\t\tsquares: squares,\n\t\t\t\t\ttile: i\n\t\t\t\t}\n\t\t\t]),\n\t\t\t//            // ini history fungsi ini, bukan this.state\n\t\t\t//stepNumber: history.length,\n\t\t\tstepNumber: state.stepNumber + 1,\n\t\t\txIsNext: !state.xIsNext,\n\t\t}));\n\t}\n\n\t// step = number\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\t// state updates are merged, no need to include history\n\t\t\tstepNumber: step,\n\t\t\txIsNext: (step % 2) === 0,\n\t\t});\n\t}\n\n\trender() {\n\t\t// ingat, di dalam render kita cuma nge-render!\n\t\t// jangan nge-modify/mutate this.state\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\t                                 // index\n\t\tconst moves = history.map(({tile}, move) => {\n\t\t\tconst col = (tile % 3) + 1;\n\t\t\tconst row = Math.floor(tile / 3) + 1\n\t\t\tconst desc = move ? `Go to move #${move} (${col},${row})`\n\t\t\t                  : 'Go to game start';\n\t\t\t// key di bawah nggak ngefek?\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>\n\t\t\t\t\t\t{desc}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t} else {\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t{/*sebenarnya nggak perlu className game-board\n\t\t\t\t\teven more, tidak perlu div at all, langsung Board aja*/}\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/*\n * squares = array dg panjang 9 (9 kotak)\n * return pemenang ('X' atau 'O' atau null)\n */\nconst calculateWinner = (squares) => {\n\tconst lines = [  // kombinasi menang\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let winPattern of lines) {\n\t\tconst [a, b, c] = winPattern;\n\n\t\t// jika tidak null dan semuanya sama\n\t\tif (squares[a] && squares[a] === squares[b]\n\t\t               && squares[a] === squares[c])\n\t\t{\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n\n// ========================================\n\n// coba cek aplikasi react yg lain gini jg nggak\nReactDOM.render(\n\t<Game />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}